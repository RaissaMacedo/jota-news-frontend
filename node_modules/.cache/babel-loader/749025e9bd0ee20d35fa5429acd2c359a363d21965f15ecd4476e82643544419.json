{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:8000/api';\nconst api = axios.create({\n  baseURL: API_URL\n});\n\n// Interceptador para adicionar o token em todas as requisições\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Função para login\nexport const loginUser = async credentials => {\n  try {\n    const response = await api.post('/login', credentials);\n    const token = response.data.token; // ajuste conforme a estrutura da resposta\n    localStorage.setItem('token', token); // Armazenar o token\n    return response.data; // Retornar dados do usuário ou similar\n  } catch (error) {\n    console.error(\"Login failed\", error);\n    throw error; // Rejeitar a promise em caso de erro\n  }\n};\n\n// Função para registro\nexport const registerUser = async userData => {\n  try {\n    const response = await api.post('/register', userData);\n    return response.data; // Retornar dados do usuário ou similar\n  } catch (error) {\n    console.error(\"Registration failed\", error);\n    throw error; // Rejeitar a promise em caso de erro\n  }\n};\n\n// Função para obter notícias\nexport const getNews = async () => {\n  try {\n    const response = await api.get('/news');\n    return response.data; // Retornar os dados da resposta\n  } catch (error) {\n    console.error(\"Failed to fetch news\", error);\n    throw error; // Rejeitar a promise em caso de erro\n  }\n};\n\n// Adicione outras funções como createNews, updateNews, deleteNews conforme necessário","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","loginUser","credentials","response","post","data","setItem","console","registerUser","userData","getNews","get"],"sources":["/home/raissa/ssd/jota-news-frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:8000/api';\n\nconst api = axios.create({\n    baseURL: API_URL,\n});\n\n// Interceptador para adicionar o token em todas as requisições\napi.interceptors.request.use((config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n}, (error) => {\n    return Promise.reject(error);\n});\n\n// Função para login\nexport const loginUser = async (credentials) => {\n    try {\n        const response = await api.post('/login', credentials);\n        const token = response.data.token; // ajuste conforme a estrutura da resposta\n        localStorage.setItem('token', token); // Armazenar o token\n        return response.data; // Retornar dados do usuário ou similar\n    } catch (error) {\n        console.error(\"Login failed\", error);\n        throw error; // Rejeitar a promise em caso de erro\n    }\n};\n\n// Função para registro\nexport const registerUser = async (userData) => {\n    try {\n        const response = await api.post('/register', userData);\n        return response.data; // Retornar dados do usuário ou similar\n    } catch (error) {\n        console.error(\"Registration failed\", error);\n        throw error; // Rejeitar a promise em caso de erro\n    }\n};\n\n// Função para obter notícias\nexport const getNews = async () => {\n    try {\n        const response = await api.get('/news');\n        return response.data; // Retornar os dados da resposta\n    } catch (error) {\n        console.error(\"Failed to fetch news\", error);\n        throw error; // Rejeitar a promise em caso de erro\n    }\n};\n\n// Adicione outras funções como createNews, updateNews, deleteNews conforme necessário\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEH;AACb,CAAC,CAAC;;AAEF;AACAC,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACvD;EACA,OAAOD,MAAM;AACjB,CAAC,EAAGK,KAAK,IAAK;EACV,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMG,SAAS,GAAG,MAAOC,WAAW,IAAK;EAC5C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,IAAI,CAAC,QAAQ,EAAEF,WAAW,CAAC;IACtD,MAAMR,KAAK,GAAGS,QAAQ,CAACE,IAAI,CAACX,KAAK,CAAC,CAAC;IACnCC,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEZ,KAAK,CAAC,CAAC,CAAC;IACtC,OAAOS,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOP,KAAK,EAAE;IACZS,OAAO,CAACT,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,MAAMA,KAAK,CAAC,CAAC;EACjB;AACJ,CAAC;;AAED;AACA,OAAO,MAAMU,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC5C,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,IAAI,CAAC,WAAW,EAAEK,QAAQ,CAAC;IACtD,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOP,KAAK,EAAE;IACZS,OAAO,CAACT,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK,CAAC,CAAC;EACjB;AACJ,CAAC;;AAED;AACA,OAAO,MAAMY,OAAO,GAAG,MAAAA,CAAA,KAAY;EAC/B,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMhB,GAAG,CAACwB,GAAG,CAAC,OAAO,CAAC;IACvC,OAAOR,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOP,KAAK,EAAE;IACZS,OAAO,CAACT,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK,CAAC,CAAC;EACjB;AACJ,CAAC;;AAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}