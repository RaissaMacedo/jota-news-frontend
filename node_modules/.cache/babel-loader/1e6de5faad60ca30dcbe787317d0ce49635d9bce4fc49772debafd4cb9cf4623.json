{"ast":null,"code":"var _jsxFileName = \"/home/raissa/ssd/jota-news-frontend/src/components/NewList/NewsList.js\",\n  _s = $RefreshSig$();\n// src/components/NewsList.js\nimport React, { useEffect, useState } from 'react';\nimport { getNews } from '../services/api'; // Supondo que essa função exista para buscar as notícias\nimport './NewsList.css'; // Adicione um arquivo CSS para estilização\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsList = () => {\n  _s();\n  const [news, setNews] = useState([]);\n  const [error, setError] = useState('');\n  const fetchNews = async () => {\n    try {\n      const data = await getNews();\n      setNews(data);\n    } catch (err) {\n      setError('Erro ao buscar notícias.');\n    }\n  };\n  useEffect(() => {\n    fetchNews();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-list\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: news.length > 0 ? news.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"news-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this), \" \"]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Nenhuma not\\xEDcia encontrada.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(NewsList, \"I7tJohmRPB6slq2RgBozSOQGKW8=\");\n_c = NewsList;\nexport default NewsList;\nvar _c;\n$RefreshReg$(_c, \"NewsList\");","map":{"version":3,"names":["React","useEffect","useState","getNews","jsxDEV","_jsxDEV","NewsList","_s","news","setNews","error","setError","fetchNews","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","title","content","id","_c","$RefreshReg$"],"sources":["/home/raissa/ssd/jota-news-frontend/src/components/NewList/NewsList.js"],"sourcesContent":["// src/components/NewsList.js\nimport React, { useEffect, useState } from 'react';\nimport { getNews } from '../services/api'; // Supondo que essa função exista para buscar as notícias\nimport './NewsList.css'; // Adicione um arquivo CSS para estilização\n\nconst NewsList = () => {\n    const [news, setNews] = useState([]);\n    const [error, setError] = useState('');\n\n    const fetchNews = async () => {\n        try {\n            const data = await getNews();\n            setNews(data);\n        } catch (err) {\n            setError('Erro ao buscar notícias.');\n        }\n    };\n\n    useEffect(() => {\n        fetchNews();\n    }, []);\n\n    return (\n        <div className=\"news-list\">\n            {error && <p className=\"error-message\">{error}</p>}\n            <ul>\n                {news.length > 0 ? (\n                    news.map((item) => (\n                        <li key={item.id} className=\"news-item\">\n                            <h3>{item.title}</h3>\n                            <p>{item.content}</p> {/* Adapte o conteúdo conforme necessário */}\n                        </li>\n                    ))\n                ) : (\n                    <p>Nenhuma notícia encontrada.</p>\n                )}\n            </ul>\n        </div>\n    );\n};\n\nexport default NewsList;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,iBAAiB,CAAC,CAAC;AAC3C,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMV,OAAO,CAAC,CAAC;MAC5BM,OAAO,CAACI,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVH,QAAQ,CAAC,0BAA0B,CAAC;IACxC;EACJ,CAAC;EAEDV,SAAS,CAAC,MAAM;IACZW,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAKU,SAAS,EAAC,WAAW;IAAAC,QAAA,GACrBN,KAAK,iBAAIL,OAAA;MAAGU,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClDf,OAAA;MAAAW,QAAA,EACKR,IAAI,CAACa,MAAM,GAAG,CAAC,GACZb,IAAI,CAACc,GAAG,CAAEC,IAAI,iBACVlB,OAAA;QAAkBU,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACnCX,OAAA;UAAAW,QAAA,EAAKO,IAAI,CAACC;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBf,OAAA;UAAAW,QAAA,EAAIO,IAAI,CAACE;QAAO;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,KAAC;MAAA,GAFjBG,IAAI,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACP,CAAC,gBAEFf,OAAA;QAAAW,QAAA,EAAG;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACpC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACb,EAAA,CAlCID,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AAoCd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}