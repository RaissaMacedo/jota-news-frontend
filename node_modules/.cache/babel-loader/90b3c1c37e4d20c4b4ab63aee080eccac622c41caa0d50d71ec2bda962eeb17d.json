{"ast":null,"code":"var _jsxFileName = \"/home/raissa/ssd/jota-news-frontend/src/components/PrivateRoute.js\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  component: Component,\n  requiredRole\n}) => {\n  const token = localStorage.getItem('token');\n  const userType = localStorage.getItem('userType'); // Obtém o tipo de usuário\n\n  // Verifica se o token está presente e se o usuário tem o papel necessário\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Verifica o papel do usuário\n  if (requiredRole && userType !== requiredRole) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this); // Ou para qualquer rota pública de acesso negado\n  }\n  return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n};\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","PrivateRoute","component","Component","requiredRole","token","localStorage","getItem","userType","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/raissa/ssd/jota-news-frontend/src/components/PrivateRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, requiredRole }) => {\n    const token = localStorage.getItem('token');\n    const userType = localStorage.getItem('userType'); // Obtém o tipo de usuário\n\n    // Verifica se o token está presente e se o usuário tem o papel necessário\n    if (!token) {\n        return <Navigate to=\"/login\" />;\n    }\n    \n    // Verifica o papel do usuário\n    if (requiredRole && userType !== requiredRole) {\n        return <Navigate to=\"/\" />; // Ou para qualquer rota pública de acesso negado\n    }\n\n    return <Component />;\n};\n\nexport default PrivateRoute;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,YAAY,GAAGA,CAAC;EAAEC,SAAS,EAAEC,SAAS;EAAEC;AAAa,CAAC,KAAK;EAC7D,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;;EAEnD;EACA,IAAI,CAACF,KAAK,EAAE;IACR,oBAAOL,OAAA,CAACF,QAAQ;MAACW,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnC;;EAEA;EACA,IAAIT,YAAY,IAAII,QAAQ,KAAKJ,YAAY,EAAE;IAC3C,oBAAOJ,OAAA,CAACF,QAAQ;MAACW,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC,CAAC;EAChC;EAEA,oBAAOb,OAAA,CAACG,SAAS;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxB,CAAC;AAACC,EAAA,GAfIb,YAAY;AAiBlB,eAAeA,YAAY;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}