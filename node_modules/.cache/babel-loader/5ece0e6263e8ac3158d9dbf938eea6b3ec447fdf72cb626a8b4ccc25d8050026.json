{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:8000/api';\nconst api = axios.create({\n  baseURL: API_URL\n});\n\n// Interceptador para adicionar o token em todas as requisições\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Interceptador para lidar com erros de resposta, especialmente 401\napi.interceptors.response.use(response => response, error => {\n  if (error.response && error.response.status === 401) {\n    console.error(\"Token expirado ou inválido. Faça login novamente.\");\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Função para login\nexport const loginUser = async credentials => {\n  console.log(\"loginUser api\");\n  try {\n    console.log(\"entrou no try do service/api\");\n    const response = await api.post('/login', credentials);\n    console.log(\"response api\", response);\n    const token = response.data.token;\n    localStorage.setItem('token', token);\n    return response.data;\n  } catch (error) {\n    console.error(\"Login failed\", error);\n    if (error.response) {\n      // console.log(\"Response Data:\", error.response.data); // Detalhes do erro da API\n      // console.log(\"Response Status:\", error.response.status);\n    }\n    throw error;\n  }\n};\n\n// Função para registro\nexport const registerUser = async userData => {\n  try {\n    const response = await api.post('/register', userData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Registration failed\", error);\n    throw error;\n  }\n};\n\n// Função para obter notícias\nexport const getNews = async () => {\n  try {\n    const response = await api.get('/news');\n    return response.data;\n  } catch (error) {\n    console.error(\"Failed to fetch news\", error);\n    throw error;\n  }\n};\n\n// Função para obter uma notícia específica pelo ID\nexport const getNewsById = async id => {\n  try {\n    const response = await api.get(`/news/${id}`);\n    return response.data; // Retornar os dados da notícia\n  } catch (error) {\n    console.error(\"Failed to fetch news by ID\", error);\n    throw error;\n  }\n};\n\n// Função para criar uma nova notícia\nexport const createNews = async newsData => {\n  try {\n    const response = await api.post('/news', newsData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Failed to create news\", error);\n    throw error;\n  }\n};\n\n// Função para editar uma notícia\nexport const editNews = async (id, newsData) => {\n  try {\n    const response = await api.put(`/news/${id}`, newsData);\n    return response.data; // Retornar os dados atualizados da notícia\n  } catch (error) {\n    console.error(\"Failed to edit news\", error);\n    throw error;\n  }\n};\n\n// Função para deletar uma notícia\nexport const deleteNews = async id => {\n  try {\n    const response = await api.delete(`/news/${id}`);\n    return response.data; // Retornar confirmação ou dados da resposta\n  } catch (error) {\n    console.error(\"Failed to delete news\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","response","status","console","removeItem","window","location","href","loginUser","credentials","log","post","data","setItem","registerUser","userData","getNews","get","getNewsById","id","createNews","newsData","editNews","put","deleteNews","delete"],"sources":["/home/raissa/ssd/jota-news-frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:8000/api';\n\nconst api = axios.create({\n    baseURL: API_URL,\n});\n\n// Interceptador para adicionar o token em todas as requisições\napi.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers['Authorization'] = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\n// Interceptador para lidar com erros de resposta, especialmente 401\napi.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        if (error.response && error.response.status === 401) {\n            console.error(\"Token expirado ou inválido. Faça login novamente.\");\n            localStorage.removeItem('token');\n            window.location.href = '/login';\n        }\n        return Promise.reject(error);\n    }\n);\n\n// Função para login\nexport const loginUser = async (credentials) => {\n    console.log(\"loginUser api\");\n    try {\n        console.log(\"entrou no try do service/api\");\n        const response = await api.post('/login', credentials);\n        console.log(\"response api\", response);\n        const token = response.data.token;\n        localStorage.setItem('token', token);\n        return response.data;\n    } catch (error) {\n        console.error(\"Login failed\", error);\n        if (error.response) {\n            // console.log(\"Response Data:\", error.response.data); // Detalhes do erro da API\n            // console.log(\"Response Status:\", error.response.status);\n        }\n        throw error;\n    }\n};\n\n// Função para registro\nexport const registerUser = async (userData) => {\n    try {\n        const response = await api.post('/register', userData);\n        return response.data;\n    } catch (error) {\n        console.error(\"Registration failed\", error);\n        throw error;\n    }\n};\n\n// Função para obter notícias\nexport const getNews = async () => {\n    try {\n        const response = await api.get('/news');\n        return response.data;\n    } catch (error) {\n        console.error(\"Failed to fetch news\", error);\n        throw error;\n    }\n};\n\n// Função para obter uma notícia específica pelo ID\nexport const getNewsById = async (id) => {\n    try {\n        const response = await api.get(`/news/${id}`);\n        return response.data; // Retornar os dados da notícia\n    } catch (error) {\n        console.error(\"Failed to fetch news by ID\", error);\n        throw error;\n    }\n};\n\n// Função para criar uma nova notícia\nexport const createNews = async (newsData) => {\n    try {\n        const response = await api.post('/news', newsData);\n        return response.data;\n    } catch (error) {\n        console.error(\"Failed to create news\", error);\n        throw error;\n    }\n};\n\n// Função para editar uma notícia\nexport const editNews = async (id, newsData) => {\n    try {\n        const response = await api.put(`/news/${id}`, newsData);\n        return response.data; // Retornar os dados atualizados da notícia\n    } catch (error) {\n        console.error(\"Failed to edit news\", error);\n        throw error;\n    }\n};\n\n// Função para deletar uma notícia\nexport const deleteNews = async (id) => {\n    try {\n        const response = await api.delete(`/news/${id}`);\n        return response.data; // Retornar confirmação ou dados da resposta\n    } catch (error) {\n        console.error(\"Failed to delete news\", error);\n        throw error;\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}