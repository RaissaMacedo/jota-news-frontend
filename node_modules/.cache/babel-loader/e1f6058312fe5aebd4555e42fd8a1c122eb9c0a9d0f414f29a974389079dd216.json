{"ast":null,"code":"var _jsxFileName = \"/home/raissa/ssd/jota-news-frontend/src/components/Auth/Register/RegisterForm.js\",\n  _s = $RefreshSig$();\n// src/components/Register.js\nimport React, { useState } from 'react';\nimport { registerUser } from '../../../services/api'; // Função para registrar usuário\nimport { useNavigate } from 'react-router-dom';\nimport './Register.css'; // Usando um CSS comum para login e registro\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleRegister = async e => {\n    e.preventDefault();\n    try {\n      const response = await registerUser({\n        name,\n        email,\n        password\n      });\n\n      // Verifica se a API retornou um perfil ou um token\n      if (response && response.success) {\n        // Ajuste conforme a estrutura de retorno da sua API\n        alert('Registro bem-sucedido! Faça login para continuar.');\n        navigate('/login'); // Redireciona para o login após registro\n      } else {\n        alert('Erro ao registrar. Tente novamente.');\n      }\n    } catch (error) {\n      console.error('Registration failed', error);\n      alert('Erro de registro. Verifique os dados e tente novamente.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"auth-title\",\n        children: \"Crie sua Conta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-subtitle\",\n        children: \"Registre-se para come\\xE7ar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleRegister,\n        className: \"auth-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Nome\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Senha\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"auth-button\",\n          children: \"Registrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"switch-text\",\n        children: [\"J\\xE1 tem uma conta?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => navigate('/login'),\n          className: \"switch-link\",\n          children: \"Fa\\xE7a login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterForm, \"csJiuSlQmiH49sngUzydjkZ0k9I=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","registerUser","useNavigate","jsxDEV","_jsxDEV","RegisterForm","_s","name","setName","email","setEmail","password","setPassword","navigate","handleRegister","e","preventDefault","response","success","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["/home/raissa/ssd/jota-news-frontend/src/components/Auth/Register/RegisterForm.js"],"sourcesContent":["// src/components/Register.js\nimport React, { useState } from 'react';\nimport { registerUser } from '../../../services/api'; // Função para registrar usuário\nimport { useNavigate } from 'react-router-dom';\nimport './Register.css'; // Usando um CSS comum para login e registro\n\nconst RegisterForm = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate();\n\n    const handleRegister = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await registerUser({ name, email, password });\n\n            // Verifica se a API retornou um perfil ou um token\n            if (response && response.success) { // Ajuste conforme a estrutura de retorno da sua API\n                alert('Registro bem-sucedido! Faça login para continuar.');\n                navigate('/login'); // Redireciona para o login após registro\n            } else {\n                alert('Erro ao registrar. Tente novamente.');\n            }\n        } catch (error) {\n            console.error('Registration failed', error);\n            alert('Erro de registro. Verifique os dados e tente novamente.');\n        }\n    };\n\n    return (\n        <div className=\"auth-container\">\n            <div className=\"auth-card\">\n                <h2 className=\"auth-title\">Crie sua Conta</h2>\n                <p className=\"auth-subtitle\">Registre-se para começar</p>\n                <form onSubmit={handleRegister} className=\"auth-form\">\n                    <label>\n                        Nome\n                        <input\n                            type=\"text\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                            required\n                        />\n                    </label>\n                    <label>\n                        Email\n                        <input\n                            type=\"email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            required\n                        />\n                    </label>\n                    <label>\n                        Senha\n                        <input\n                            type=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            required\n                        />\n                    </label>\n                    <button type=\"submit\" className=\"auth-button\">\n                        Registrar\n                    </button>\n                </form>\n                <p className=\"switch-text\">\n                    Já tem uma conta?{' '}\n                    <span onClick={() => navigate('/login')} className=\"switch-link\">\n                        Faça login\n                    </span>\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default RegisterForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}