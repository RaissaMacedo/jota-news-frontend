{"ast":null,"code":"var _jsxFileName = \"/home/raissa/ssd/jota-news-frontend/src/pages/Login.js\",\n  _s = $RefreshSig$();\n// src/components/Login.js\nimport React, { useState } from 'react';\nimport { loginUser } from '../services/api'; // Importe a função de login\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const userData = await loginUser({\n        email,\n        password\n      });\n\n      // Aqui assumimos que a API retorna o perfil do usuário e outros dados\n      const userRole = userData.role; // Substitua 'role' pela chave correta da sua API\n      const userId = userData.id; // Supondo que você também tenha um id do usuário\n\n      // Redireciona para as rotas corretas com base no perfil do usuário\n      if (userRole === 'admin') {\n        navigate(`/admin/dashboard/${userId}`); // Exemplo de rota para admin com userId\n      } else if (userRole === 'editor') {\n        navigate(`/editor/home/${userId}`); // Exemplo de rota para editor com userId\n      } else {\n        navigate(`/reader/home/${userId}`); // Exemplo de rota para leitores ou outros usuários com userId\n      }\n    } catch (error) {\n      console.error('Login failed', error);\n      alert('Erro de login. Verifique suas credenciais.');\n    }\n  };\n  const handleNavigateToRegister = () => {\n    navigate('/register'); // Redireciona para a tela de registro\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-title\",\n        children: \"Bem-vindo!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-subtitle\",\n        children: \"Fa\\xE7a login para continuar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Senha\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"register-text\",\n        children: [\"N\\xE3o tem uma conta?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: handleNavigateToRegister,\n          className: \"register-link\",\n          children: \"Registre-se\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","loginUser","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","navigate","handleLogin","e","preventDefault","userData","userRole","role","userId","id","error","console","alert","handleNavigateToRegister","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["/home/raissa/ssd/jota-news-frontend/src/pages/Login.js"],"sourcesContent":["// src/components/Login.js\nimport React, { useState } from 'react';\nimport { loginUser } from '../services/api'; // Importe a função de login\nimport { useNavigate } from 'react-router-dom';\n\nconst Login = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate();\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        try {\n            const userData = await loginUser({ email, password });\n            \n            // Aqui assumimos que a API retorna o perfil do usuário e outros dados\n            const userRole = userData.role; // Substitua 'role' pela chave correta da sua API\n            const userId = userData.id; // Supondo que você também tenha um id do usuário\n\n            // Redireciona para as rotas corretas com base no perfil do usuário\n            if (userRole === 'admin') {\n                navigate(`/admin/dashboard/${userId}`); // Exemplo de rota para admin com userId\n            } else if (userRole === 'editor') {\n                navigate(`/editor/home/${userId}`); // Exemplo de rota para editor com userId\n            } else {\n                navigate(`/reader/home/${userId}`); // Exemplo de rota para leitores ou outros usuários com userId\n            }\n        } catch (error) {\n            console.error('Login failed', error);\n            alert('Erro de login. Verifique suas credenciais.');\n        }\n    };\n\n    const handleNavigateToRegister = () => {\n        navigate('/register'); // Redireciona para a tela de registro\n    };\n\n    return (\n        <div className=\"login-container\">\n            <div className=\"login-card\">\n                <h2 className=\"login-title\">Bem-vindo!</h2>\n                <p className=\"login-subtitle\">Faça login para continuar</p>\n                <form onSubmit={handleLogin} className=\"login-form\">\n                    <label>\n                        Email\n                        <input\n                            type=\"email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            required\n                        />\n                    </label>\n                    <label>\n                        Senha\n                        <input\n                            type=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            required\n                        />\n                    </label>\n                    <button type=\"submit\" className=\"login-button\">\n                        Entrar\n                    </button>\n                </form>\n                <p className=\"register-text\">\n                    Não tem uma conta?{' '}\n                    <span onClick={handleNavigateToRegister} className=\"register-link\">\n                        Registre-se\n                    </span>\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}