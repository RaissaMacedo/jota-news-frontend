{"ast":null,"code":"var _jsxFileName = \"/home/raissa/ssd/jota-news-frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { loginUser } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null); // Adiciona estado para erros\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userType = localStorage.getItem('userType');\n    if (token && userType) {\n      setUser({\n        token,\n        userType\n      });\n    }\n    setLoading(false);\n  }, []);\n  const login = async credentials => {\n    try {\n      const data = await loginUser(credentials);\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('userType', data.userType);\n      setUser({\n        token: data.token,\n        userType: data.userType\n      });\n      setError(null); // Limpa o erro ao fazer login com sucesso\n    } catch (err) {\n      setError('Login falhou. Verifique suas credenciais e tente novamente.'); // Define mensagem de erro\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userType');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      loading,\n      error\n    },\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 24\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","loginUser","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","token","localStorage","getItem","userType","login","credentials","data","setItem","err","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/raissa/ssd/jota-news-frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { loginUser } from '../services/api';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null); // Adiciona estado para erros\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        const userType = localStorage.getItem('userType');\n        if (token && userType) {\n            setUser({ token, userType });\n        }\n        setLoading(false);\n    }, []);\n\n    const login = async (credentials) => {\n        try {\n            const data = await loginUser(credentials);\n            localStorage.setItem('token', data.token);\n            localStorage.setItem('userType', data.userType);\n            setUser({ token: data.token, userType: data.userType });\n            setError(null); // Limpa o erro ao fazer login com sucesso\n        } catch (err) {\n            setError('Login falhou. Verifique suas credenciais e tente novamente.'); // Define mensagem de erro\n        }\n    };\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('userType');\n        setUser(null);\n    };\n\n    return (\n        <AuthContext.Provider value={{ user, login, logout, loading, error }}>\n            {loading ? <div>Carregando...</div> : children}\n        </AuthContext.Provider>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1CC,SAAS,CAAC,MAAM;IACZ,MAAMc,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACjD,IAAIF,KAAK,IAAIG,QAAQ,EAAE;MACnBR,OAAO,CAAC;QAAEK,KAAK;QAAEG;MAAS,CAAC,CAAC;IAChC;IACAN,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,KAAK,GAAG,MAAOC,WAAW,IAAK;IACjC,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMnB,SAAS,CAACkB,WAAW,CAAC;MACzCJ,YAAY,CAACM,OAAO,CAAC,OAAO,EAAED,IAAI,CAACN,KAAK,CAAC;MACzCC,YAAY,CAACM,OAAO,CAAC,UAAU,EAAED,IAAI,CAACH,QAAQ,CAAC;MAC/CR,OAAO,CAAC;QAAEK,KAAK,EAAEM,IAAI,CAACN,KAAK;QAAEG,QAAQ,EAAEG,IAAI,CAACH;MAAS,CAAC,CAAC;MACvDJ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOS,GAAG,EAAE;MACVT,QAAQ,CAAC,6DAA6D,CAAC,CAAC,CAAC;IAC7E;EACJ,CAAC;EAED,MAAMU,MAAM,GAAGA,CAAA,KAAM;IACjBR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCT,YAAY,CAACS,UAAU,CAAC,UAAU,CAAC;IACnCf,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,oBACIN,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAElB,IAAI;MAAEU,KAAK;MAAEK,MAAM;MAAEb,OAAO;MAAEE;IAAM,CAAE;IAAAN,QAAA,EAChEI,OAAO,gBAAGP,OAAA;MAAAG,QAAA,EAAK;IAAa;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GAAGxB;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAE/B,CAAC;AAACvB,EAAA,CArCWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}